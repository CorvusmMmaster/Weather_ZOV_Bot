import  requests
import datetime
from config import bot_token,open_weather_token
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import  executor

bot = Bot(token=bot_token)
dp = Dispatcher(bot)
@dp.message_handler( commands = ["start"])
async def start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç, —è Weater_ZOV_Botüòé,–Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ —è –≤—ã–≤–µ–¥—É —Ç–µ–±–µ –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –æ –ø–æ–≥–æ–¥–µ –≤ –Ω–µ–º üòÅ")
@dp.message_handler()
async  def get_weather(message: types.Message):

    code_smile = {
        "Clear": "–Ø—Å–Ω–æ \U0001F31E",
        "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
        "Rain": "–î–æ–∂–¥—å \U0001F327",
        "Drizzle": "–î–æ–∂–¥—å \U0001F327",
        "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
        "Snow": "–°–Ω–µ–≥ \U0001F328",
    }


    try:
        r = requests.get(
            f"http://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric"
        )
        data = r.json()

        city=data['name']
        cur_weather = data['main']['temp']
        weather_description = data["weather"][0]["main"]
        if weather_description in code_smile:
            wd=code_smile[weather_description]
        else:
            wd="–î–∞–∂–µ –æ–ø–∏—Å—ã–≤–∞—Ç—å –Ω–µ —Ö–æ—á—É"
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_timestamp=datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_timestamp=datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_the_day=datetime.datetime.fromtimestamp(data['sys']['sunset'])-datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        await message.reply(f"–°–µ–≥–æ–¥–Ω—è: {datetime.datetime.now().strftime('%Y-%m-%d; %H:%m')}\n"
            f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n"
            f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}C¬∞, {wd}\n"
            f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
            f"–í–µ—Ç–µ—Ä: {wind}–º/—Å\n"
            f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\n"
            f"–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n"
            f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∞—Å–æ–≤–æ–≥–æ –¥–Ω—è: {length_of_the_day}\n"
              )


    except :
        await  message.reply("‚ùó –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ ‚ùó")

if __name__ == '__main__':
    executor.start_polling(dp)
